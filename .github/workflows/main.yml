name: CI/CD Pipeline
on:
  push:
    branches: [ main ]
jobs:
  continuous-integration:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9.5
          architecture: x64
      - name: Install Python Virtual ENV
        run: pip3 install virtualenv
      - name: Setup Virtual env
        uses: actions/cache@v2
        id: cache-venv
        with:
          path: venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-
      - name: Activate and Install Dependencies into Virtual env
        run: python -m venv venv && source venv/bin/activate &&
          pip3 install -r requirements.txt
        if: steps.cache-venv.outputs.cache-hit != 'true'
      # Install all the app dependencies
      - name: Install dependencies
        run: pip3 install -r requirements.txt
      # Build the app and run tests
      - name: Build and Run Test
        run: . venv/bin/activate && pytest
      - name: Create Zipfile archive of Dependencies
        run: |
          cd ./venv/lib/python3.9.5/site-packages
          zip -r9 ../../../../api.zip .
      - name: Add App to Zipfile
        run: |
          # Make sure all the necessary modules and dependencies are included
          zip -g api.zip -r api
          # Ensure we include any modules in the root directory that might be imported
          for module in query_engine.py data_fetcher.py vector_store.py swap_executor.py; do
            if [ -f "$module" ]; then
              zip -g api.zip "$module"
            fi
          done
          # Add any other necessary files
          if [ -f "requirements.txt" ]; then
            zip -g api.zip requirements.txt
          fi
      - name: Upload zip file artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: api
          path: api.zip
  continuous-deployment:
    runs-on: ubuntu-latest
    needs: [continuous-integration]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Install AWS CLI
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Download Lambda api.zip
        uses: actions/configure-pages@v4
        with:
          name: api
      - name: Upload to S3
        run: aws s3 cp api.zip s3://crypto-swaptest/api.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Deploy new Lambda
        uses: actions/deploy-pages@v4
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}